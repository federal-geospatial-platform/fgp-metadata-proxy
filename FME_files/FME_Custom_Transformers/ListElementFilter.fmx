#! <?xml version="1.0" encoding="UTF-8" ?>
#! <TRANSFORMER
# TRANSFORMER_BEGIN ListElementFilter,1,Attributes,ef5f9c41-3b4f-429d-8e8c-949ad7749956,"Linked by Default",No,NO_PARALLELISM,,No,20200,YES,No,37,No,
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana';">Replaces the specified source list with the same name list containing only elements that match the specified condition. If the source list does not contain matched elements at all, the input feature will be output via the NotFound port without any change.</span>
# </p>
# <p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Verdana';">
#     <br/>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana';">This transformer performs filtering with one of these filter types.</span>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana';">---------- </span>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana'; color:#aa0000;">Has Value</span>
#     <span style=" font-family:'Verdana';">: Every element in the resulting list stores a value (i.e. non-empty, non-null, non-missing).</span>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana'; color:#aa0000;">Exact Match</span>
#     <span style=" font-family:'Verdana';">: Every element in the resulting list stores a value that exact matches the specified string.</span>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana'; color:#aa0000;">Contains</span>
#     <span style=" font-family:'Verdana';">: Every element in the resulting list stores a value that contains the specified string.</span>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana'; color:#aa0000;">Begins With</span>
#     <span style=" font-family:'Verdana';">: Every element in the resulting list stores a value that begins with the specified string.</span>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana'; color:#aa0000;">Ends With</span>
#     <span style=" font-family:'Verdana';">: Every element in the resulting list stores a value that ends with the specified string.</span>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana'; color:#aa0000;">Regular Expression Match</span>
#     <span style=" font-family:'Verdana';">: Every element in the resulting list stores a value that matches the specified regular expression.</span>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana'; color:#aa0000;">Numeric Value</span>
#     <span style=" font-family:'Verdana';">: Every element in the resulting list stores a numeric value.</span>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana'; color:#aa0000;">Numeric Range</span>
#     <span style=" font-family:'Verdana';">: Every element in the resulting list stores a numeric value within the specified range.</span>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana';">---------- </span>
# </p>
# <p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Verdana';">
#     <br/>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana'; font-size:medium; color:#000000;">This transformer treats a null and missing element as an empty string when determining if an element matches the filtering condition</span>
#     <span style=" font-family:'Verdana'; font-size:medium; color:#000000;">.</span>
#     <span style=" font-family:'Verdana';">However, a null or missing element will be propagated to the resulting list as is, if it matches the filtering condition.</span>
# </p>
# <p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Verdana';">
#     <br/>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana';">This transformer supports simple lists (e.g. _list{}) and structured lists (e.g. _list{}.foo, _list{}.bar), but doesn't support nested lists (e.g. _list{}.sub{}).</span>
# </p>
# <p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Verdana';">
#     <br/>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana';">If a member (component) of a structured list is specified as the source, other members (components) of the same list will also be filtered synchronously with the specified member.</span>
# </p>
# <p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Verdana';">
#     <br/>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana';">This transformer differentiates a simple list and structured list having the same base name. For example, when "_base{}" is specified as the source, "_base{}.foo" and "_base{}.bar" won't be processed even though the base name is the same as the source list. Vice versa. </span>
# </p>
# <p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Verdana';">
#     <br/>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana';">If the filtering cannot be performed with an unexpected reason (e.g. malformed regular expression), the input feature will be output via the &lt;Rejected&gt; port, and the rejected features will have an attribute named "_rejected_reason" that stores a string describing the rejected reason.</span>
# </p>
# <p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Verdana';">
#     <br/>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana'; font-weight:600; color:#0000ff;">Example</span>
# </p>
# <p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Verdana';">
#     <br/>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana';">Consider that the input feature has this list - contains 5 elements, index range is 0 to 4.</span>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana'; color:#aa0000;">_list{}.foo = [1,2,3,4,5]</span>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana'; color:#aa0000;">_list{}.bar = [a,b,c,d,e]</span>
# </p>
# <p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Verdana';">
#     <br/>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana';">If you set the parameters like this:</span>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana';">- Source List Attribute: </span>
#     <span style=" font-family:'Verdana'; color:#aa0000;">_list{}.foo</span>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana';">- Filter Type: </span>
#     <span style=" font-family:'Verdana'; color:#aa0000;">Numeric Range</span>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana';">- Match Expression: </span>
#     <span style=" font-family:'Verdana'; color:#aa0000;">(2,5)</span>
#     <span style=" font-family:'Verdana'; font-style:italic; color:#333333;">this expression represents "greater than 2 and less than 5"</span>
# </p>
# <p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Verdana';">
#     <br/>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana';">the resulting list will be:</span>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana'; color:#aa0000;">_list{}.foo = [3,4]</span>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana'; color:#aa0000;">_list{}.bar = [c,d]</span>
# </p>
# <p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <span style=" font-family:'Verdana';">Here, the number of the resulting elements is 2 and the index range is 0 to 1.</span>
# </p>
# <p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">
#     <br/>
# </p>
# <p style="-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:'Verdana';">
#     <br/>
# </p>
# 
# TRANSFORMER_END
#!   ATTR_TYPE_ENCODING="SDF"
#!   BLOCKED_LOOPING="No"
#!   CATEGORY="Attributes"
#!   DESCRIPTION="&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;Replaces the specified source list with the same name list containing only elements that match the specified condition. If the source list does not contain matched elements at all, the input feature will be output via the NotFound port without any change.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;This transformer performs filtering with one of these filter types.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;---------- &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;Has Value&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;: Every element in the resulting list stores a value (i.e. non-empty, non-null, non-missing).&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;Exact Match&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;: Every element in the resulting list stores a value that exact matches the specified string.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;Contains&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;: Every element in the resulting list stores a value that contains the specified string.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;Begins With&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;: Every element in the resulting list stores a value that begins with the specified string.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;Ends With&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;: Every element in the resulting list stores a value that ends with the specified string.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;Regular Expression Match&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;: Every element in the resulting list stores a value that matches the specified regular expression.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;Numeric Value&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;: Every element in the resulting list stores a numeric value.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;Numeric Range&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;: Every element in the resulting list stores a numeric value within the specified range.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;---------- &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; font-size:medium; color:#000000;&quot;&gt;This transformer treats a null and missing element as an empty string when determining if an element matches the filtering condition&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; font-size:medium; color:#000000;&quot;&gt;.&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;However, a null or missing element will be propagated to the resulting list as is, if it matches the filtering condition.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;This transformer supports simple lists (e.g. _list{}) and structured lists (e.g. _list{}.foo, _list{}.bar), but doesn&apos;t support nested lists (e.g. _list{}.sub{}).&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;If a member (component) of a structured list is specified as the source, other members (components) of the same list will also be filtered synchronously with the specified member.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;This transformer differentiates a simple list and structured list having the same base name. For example, when &quot;_base{}&quot; is specified as the source, &quot;_base{}.foo&quot; and &quot;_base{}.bar&quot; won&apos;t be processed even though the base name is the same as the source list. Vice versa. &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;If the filtering cannot be performed with an unexpected reason (e.g. malformed regular expression), the input feature will be output via the &amp;lt;Rejected&amp;gt; port, and the rejected features will have an attribute named &quot;_rejected_reason&quot; that stores a string describing the rejected reason.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; font-weight:600; color:#0000ff;&quot;&gt;Example&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;Consider that the input feature has this list - contains 5 elements, index range is 0 to 4.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;_list{}.foo = [1,2,3,4,5]&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;_list{}.bar = [a,b,c,d,e]&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;If you set the parameters like this:&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;- Source List Attribute: &lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;_list{}.foo&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;- Filter Type: &lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;Numeric Range&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;- Match Expression: &lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;(2,5)&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; font-style:italic; color:#333333;&quot;&gt;this expression represents &quot;greater than 2 and less than 5&quot;&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;the resulting list will be:&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;_list{}.foo = [3,4]&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;_list{}.bar = [c,d]&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;Here, the number of the resulting elements is 2 and the index range is 0 to 1.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;"
#!   DOC_EXTENTS="3235.01 594.003"
#!   DOC_TOP_LEFT="100 -624.503"
#!   EXPLICIT_BOOKMARK_ORDER="false"
#!   FME_BUILD_NUM="20200"
#!   FME_DOCUMENT_GUID="ef5f9c41-3b4f-429d-8e8c-949ad7749956"
#!   FME_DOCUMENT_PRIORGUID="5c099ed6-224a-44e5-abbf-01db3b580b1f,a36397c4-ab20-4d35-9b0f-1f3cbd4b09df,1c6253c5-1602-4e4d-bfd5-09ccc0a3d009"
#!   FME_LINKED_TRANSFORMER_VERSION="1"
#!   FME_PROCESS_COUNT="NO_PARALLELISM"
#!   FME_PROCESS_GROUPS_ORDERED="No"
#!   FME_PROCESS_GROUP_BY=""
#!   FME_PROCESS_PRESERVE_GROUP_ATTR="No"
#!   FME_SERVER_SERVICES=""
#!   FMX_ATTRIBUTE_PROPOGATION_MODE="AUTO"
#!   FMX_INSERT_MODE="Linked by Default"
#!   HISTORY="2016-03-27,Takashi&lt;space&gt;Iijima,Original&lt;space&gt;Implementation,2016-03-28,Takashi&lt;space&gt;Iijima,Added&lt;space&gt;Filter&lt;space&gt;Types&lt;space&gt;-&lt;space&gt;&lt;quote&gt;Contains&lt;quote&gt;&lt;comma&gt;&lt;space&gt;&lt;quote&gt;Begins&lt;space&gt;With&lt;quote&gt;&lt;comma&gt;&lt;space&gt;&lt;quote&gt;Ends&lt;space&gt;With&lt;quote&gt;"
#!   ITERATION_COUNT_ATTR=""
#!   LAST_SAVE_BUILD="FME(R) 2020.0.0.0 (20200309 - Build 20200 - WIN32)"
#!   LAST_SAVE_DATE="2022-11-23T11:21:33"
#!   MARKDOWN_DESCRIPTION=""
#!   MARKDOWN_USAGE=""
#!   MAX_LOOP_ITERATIONS=""
#!   PASSWORD=""
#!   PYTHON_COMPATIBILITY="37"
#!   REPLACED_BY=""
#!   SHOW_ANNOTATIONS="true"
#!   SHOW_INFO_NODES="true"
#!   TITLE="ListElementFilter"
#!   USAGE="&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; font-weight:600; color:#0000ff;&quot;&gt;Parameters&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#005500;&quot;&gt;Source List Attribute&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;:&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;Specify a simple list (e.g. _list{}) or a member of a structured list (e.g. _list{}.foo) that should be filtered.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#005500;&quot;&gt;Fiter Type&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;:&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;Select one of these filter types.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;---------- &lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;Has Value&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;: Every element in the resulting list stores a value (i.e. non-empty, non-null, non-missing).&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;Exact Match&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;: Every element in the resulting list stores a value that exact matches the specified string.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;Contains&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;: Every element in the resulting list stores a value that contains the specified string.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;Begins With&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;: Every element in the resulting list stores a value that begins with the specified string.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;Ends With&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;: Every element in the resulting list stores a value that ends with the specified string.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;Regular Expression Match&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;: Every element in the resulting list stores a value that matches the specified regular expression.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;Numeric Value&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;: Every element in the resulting list stores a numeric value.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;Numeric Range&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;: Every element in the resulting list stores a numeric value within the specified range.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;---------- &lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#005500;&quot;&gt;Match Expression&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;: &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;In the &quot;Exact Match&quot;, &quot;Contains&quot;, &quot;Begins With&quot;, or &quot;Ends With&quot; type filtering, enter a text string as the filtering condition.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;In the &quot;Regular Expression Match&quot; type filtering, enter a regular expression as the filtering condition.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;In the &quot;Numeric Range&quot; type filtering, specify a numeric range as the filtering condition, with this format.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;---------- &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;( or [ &lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; font-style:italic; color:#aa0000;&quot;&gt;lower value&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;, &lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; font-style:italic; color:#aa0000;&quot;&gt;upper value&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#aa0000;&quot;&gt;) or ]&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;- Lower value and upper value should be separated by a comma.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;- Blank for the lower/upper value means unlimited.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;- Round bracket ( ) indicates &quot;excluding the specified value&quot;; square bracket [ ] indicates &quot;including the specified value&quot;.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;Examples:&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;(0,5) matches any numeric value that is greater than 0 and less than 5. &lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;(0,5] matches any numeric value that is greater than 0 and less than or equal to 5.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;[0,5) matches any numeric value that is greater than or equal to 0 and less than 5.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;[0,5] matches any numeric value that is greater than or equal to 0 and less than or equal to 5.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;[0,) matches any numeric value that is greater than or equal to 0.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;(,5) matches any numeric value that is less than 5.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;----------&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;This parameter setting does not affect the result of the &quot;Has Value&quot; and &quot;Numeric Value&quot; type filtering.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#005500;&quot;&gt;Case Sensitive&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;:&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;By default, the filtering of &quot;Exact Match&quot; or &quot;Regular Expression Match&quot; type will be performed in case-insensitive. If you set &quot;Yes&quot; to this parameter, the filtering will be performed in case-sensitive.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;This parameter setting does not affect the result of the filtering with other types.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot;-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:&apos;Verdana&apos;;&quot;&gt;&#10;    &lt;br/&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;; color:#005500;&quot;&gt;Negate Filtering Condition&lt;/span&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;:&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;If you set &quot;Yes&quot; to this parameter, this transformer performs the filtering with the negate condition. For example, if you set &quot;[0,5]&quot; to the &quot;Match Expression&quot; in the &quot;Numeric Range&quot; type filtering and then set &quot;Yes&quot; to this parameter, the resulting list will contain elements that are less than 0 or greater than 5.&lt;/span&gt;&#10;&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&#10;    &lt;span style=&quot; font-family:&apos;Verdana&apos;;&quot;&gt;Note: the transformer won&apos;t select non-numeric elements in the &quot;Numeric Range&quot; type filtering even if you set &quot;Yes&quot; to the &quot;Negate Filtering Condition&quot; parameter.&lt;/span&gt;&#10;&lt;/p&gt;&#10;"
#!   USE_MARKDOWN=""
#!   VIEW_POSITION="-330.003 350.004"
#!   WARN_INVALID_XFORM_PARAM="Yes"
#!   WORKSPACE_VERSION="1"
#!   XFORM_DEPRECATED="No"
#!   ZOOM_SCALE="100"
#! >
#! <DATASETS>
#! </DATASETS>
#! <DATA_TYPES>
#! </DATA_TYPES>
#! <GEOM_TYPES>
#! </GEOM_TYPES>
#! <FEATURE_TYPES>
#! </FEATURE_TYPES>
#! <FMESERVER>
#! </FMESERVER>
#! <GLOBAL_PARAMETERS>
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI LIST_ATTR_ENCODED_OR_ATTR LIST_ATTR &quot; &quot; Source List Attribute:"
#!   DEFAULT_VALUE=""
#!   IS_STAND_ALONE="false"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI LOOKUP_CHOICE_OR_ATTR FILTER_TYPE Has&lt;space&gt;Value,HAS_VALUE%Exact&lt;space&gt;Match,EXACT_MATCH%Contains,CONTAINS%Begins&lt;space&gt;With,BEGINS_WITH%Ends&lt;space&gt;With,ENDS_WITH%Regular&lt;space&gt;Expression&lt;space&gt;Match,REGEX_MATCH%Numeric&lt;space&gt;Value,NUMERIC_VALUE%Numeric&lt;space&gt;Range,NUMERIC_RANGE Filter Type:"
#!   DEFAULT_VALUE="HAS_VALUE"
#!   IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI OPTIONAL TEXT_OR_ATTR EXP Match Expression:"
#!   DEFAULT_VALUE=""
#!   IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI CHOICE_OR_ATTR CASE Yes%No Case Sensitive:"
#!   DEFAULT_VALUE="No"
#!   IS_STAND_ALONE="true"
#! />
#! <GLOBAL_PARAMETER
#!   GUI_LINE="GUI CHOICE_OR_ATTR NEGATE Yes%No Negate Filtering Condition:"
#!   DEFAULT_VALUE="No"
#!   IS_STAND_ALONE="true"
#! />
#! </GLOBAL_PARAMETERS>
#! <COMMENTS>
#! <COMMENT
#!   IDENTIFIER="20"
#!   COMMENT_VALUE="&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;&#10;&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;&#10;p, li { white-space: pre-wrap; }&#10;&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:&apos;メイリオ&apos;; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;History of the Tcl Script:&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;2016-03-27  Original Implementation&lt;/p&gt;&#10;&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;2016-03-28  Added Filtering Types - &amp;quot;CONTAINS&amp;quot;, &amp;quot;BEGINS_WITH&amp;quot;, &amp;quot;ENDS_WITH&amp;quot;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;"
#!   POSITION="540.005 -390.50099999999998"
#!   TOP_LEFT="540.005 -390.50099999999998"
#!   BOTTOM_RIGHT="2201.7750000000001 -624.50299999999993"
#!   BOUNDING_RECT="540.005 -390.50099999999998 1661.77 234.00200000000001"
#!   ORDER="500000000000000"
#!   FOLLOW_ANCHOR="true"
#!   INFO_NODE="false"
#!   CUSTOM_USER_COLOR="false"
#!   COLOUR="1,1,0.95686274509803926,0.78431372549019607"
#!   SIZE_POLICY="10"
#!   ANCHORED_NODE="0"
#! />
#! </COMMENTS>
#! <CONSTANTS>
#! </CONSTANTS>
#! <BOOKMARKS>
#! </BOOKMARKS>
#! <TRANSFORMERS>
#! <TRANSFORMER
#!   IDENTIFIER="4"
#!   TYPE="ParameterFetcher"
#!   VERSION="4"
#!   POSITION="678 -81.5"
#!   BOUNDING_RECT="678 -81.5 437.012 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="15575"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.list_attr" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.filter_type" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.case" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.exp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.negate" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ATTR_LIST" PARM_VALUE="__listelementfilter.list_attr {$(LIST_ATTR)} __listelementfilter.filter_type {$(FILTER_TYPE)} __listelementfilter.case {$(CASE)} __listelementfilter.exp {$(EXP)} __listelementfilter.negate {$(NEGATE)}"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="ParameterFetcher"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="6"
#!   TYPE="TclCaller"
#!   VERSION="4"
#!   POSITION="1234.01 -81.5"
#!   BOUNDING_RECT="1234.01 -81.5 430 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="15575"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.list_attr" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.filter_type" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.case" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.exp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.negate" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.result" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ADVANCED_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="COPIES_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="COPYATT" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="HIDE_ATTRIBUTES" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="LIST_ATTRS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="NEW_ATTRIBUTES" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="SRC" PARM_VALUE="proc&lt;space&gt;filterListElements&lt;space&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;listAttr&lt;space&gt;&lt;openbracket&gt;FME_GetAttribute&lt;space&gt;&lt;quote&gt;__listelementfilter.list_attr&lt;quote&gt;&lt;closebracket&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;!&lt;openbracket&gt;regexp&lt;space&gt;&lt;opencurly&gt;^&lt;openparen&gt;&lt;openbracket&gt;^&lt;opencurly&gt;&lt;closecurly&gt;&lt;closebracket&gt;+&lt;closeparen&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;openparen&gt;&lt;backslash&gt;.&lt;openbracket&gt;^&lt;opencurly&gt;&lt;closecurly&gt;&lt;closebracket&gt;+&lt;closeparen&gt;?&lt;dollar&gt;&lt;closecurly&gt;&lt;space&gt;&lt;space&gt;&lt;dollar&gt;listAttr&lt;space&gt;m&lt;space&gt;base&lt;space&gt;suffix&lt;closebracket&gt;&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;&lt;quote&gt;failed&lt;space&gt;interpreting&lt;space&gt;source&lt;space&gt;list&lt;space&gt;name:&lt;space&gt;&lt;dollar&gt;listAttr&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;maxIndex&lt;space&gt;-1&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;suffixes&lt;space&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;&lt;openbracket&gt;string&lt;space&gt;equal&lt;space&gt;&lt;dollar&gt;suffix&lt;space&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;closebracket&gt;&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;listAttrPattern&lt;space&gt;&lt;quote&gt;^&lt;dollar&gt;base&lt;opencurly&gt;&lt;openparen&gt;&lt;backslash&gt;&lt;backslash&gt;d+&lt;closeparen&gt;&lt;closecurly&gt;&lt;openparen&gt;&lt;closeparen&gt;&lt;backslash&gt;&lt;dollar&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;space&gt;else&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;listAttrPattern&lt;space&gt;&lt;quote&gt;^&lt;dollar&gt;base&lt;opencurly&gt;&lt;openparen&gt;&lt;backslash&gt;&lt;backslash&gt;d+&lt;closeparen&gt;&lt;closecurly&gt;&lt;openparen&gt;&lt;backslash&gt;&lt;backslash&gt;.&lt;backslash&gt;&lt;openbracket&gt;^&lt;opencurly&gt;&lt;closecurly&gt;&lt;backslash&gt;&lt;closebracket&gt;+&lt;closeparen&gt;&lt;backslash&gt;&lt;dollar&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;foreach&lt;space&gt;attr&lt;space&gt;&lt;openbracket&gt;FME_AttributeNames&lt;closebracket&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;&lt;openbracket&gt;regexp&lt;space&gt;&lt;dollar&gt;listAttrPattern&lt;space&gt;&lt;dollar&gt;attr&lt;space&gt;m&lt;space&gt;i&lt;space&gt;s&lt;closebracket&gt;&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;&lt;dollar&gt;maxIndex&lt;space&gt;&lt;lt&gt;&lt;space&gt;&lt;dollar&gt;i&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;maxIndex&lt;space&gt;&lt;dollar&gt;i&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;&lt;openbracket&gt;lsearch&lt;space&gt;&lt;dollar&gt;suffixes&lt;space&gt;&lt;dollar&gt;s&lt;closebracket&gt;&lt;space&gt;&lt;lt&gt;&lt;space&gt;0&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;lappend&lt;space&gt;suffixes&lt;space&gt;&lt;dollar&gt;s&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;isNoCase&lt;space&gt;&lt;openbracket&gt;string&lt;space&gt;equal&lt;space&gt;&lt;openbracket&gt;FME_GetAttribute&lt;space&gt;&lt;quote&gt;__listelementfilter.case&lt;quote&gt;&lt;closebracket&gt;&lt;space&gt;&lt;quote&gt;No&lt;quote&gt;&lt;closebracket&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;&lt;dollar&gt;isNoCase&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;exp&lt;space&gt;&lt;openbracket&gt;string&lt;space&gt;tolower&lt;space&gt;&lt;openbracket&gt;FME_GetAttribute&lt;space&gt;&lt;quote&gt;__listelementfilter.exp&lt;quote&gt;&lt;closebracket&gt;&lt;closebracket&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;space&gt;else&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;exp&lt;space&gt;&lt;openbracket&gt;FME_GetAttribute&lt;space&gt;&lt;quote&gt;__listelementfilter.exp&lt;quote&gt;&lt;closebracket&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;proc&lt;space&gt;attrValue&lt;space&gt;&lt;opencurly&gt;attr&lt;space&gt;isNoCase&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;&lt;dollar&gt;isNoCase&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;&lt;openbracket&gt;string&lt;space&gt;tolower&lt;space&gt;&lt;openbracket&gt;FME_GetAttribute&lt;space&gt;&lt;dollar&gt;attr&lt;closebracket&gt;&lt;closebracket&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;space&gt;else&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;&lt;openbracket&gt;FME_GetAttribute&lt;space&gt;&lt;dollar&gt;attr&lt;closebracket&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;proc&lt;space&gt;matchString&lt;space&gt;&lt;opencurly&gt;s&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;&lt;openbracket&gt;string&lt;space&gt;map&lt;space&gt;&lt;opencurly&gt;&lt;backslash&gt;&lt;backslash&gt;&lt;space&gt;&lt;backslash&gt;&lt;backslash&gt;&lt;backslash&gt;&lt;backslash&gt;&lt;space&gt;*&lt;space&gt;&lt;backslash&gt;&lt;backslash&gt;*&lt;space&gt;?&lt;space&gt;&lt;backslash&gt;&lt;backslash&gt;?&lt;space&gt;&lt;backslash&gt;&lt;openbracket&gt;&lt;space&gt;&lt;backslash&gt;&lt;backslash&gt;&lt;backslash&gt;&lt;openbracket&gt;&lt;space&gt;&lt;backslash&gt;&lt;closebracket&gt;&lt;space&gt;&lt;backslash&gt;&lt;backslash&gt;&lt;backslash&gt;&lt;closebracket&gt;&lt;closecurly&gt;&lt;space&gt;&lt;dollar&gt;s&lt;closebracket&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;indices&lt;space&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;doMatch&lt;space&gt;0&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;filterType&lt;space&gt;&lt;openbracket&gt;FME_GetAttribute&lt;space&gt;&lt;quote&gt;__listelementfilter.filter_type&lt;quote&gt;&lt;closebracket&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;switch&lt;space&gt;&lt;space&gt;&lt;dollar&gt;filterType&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;HAS_VALUE&lt;quote&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;for&lt;space&gt;&lt;opencurly&gt;set&lt;space&gt;i&lt;space&gt;0&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;dollar&gt;i&lt;space&gt;&lt;lt&gt;=&lt;space&gt;&lt;dollar&gt;maxIndex&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;incr&lt;space&gt;i&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;!&lt;openbracket&gt;string&lt;space&gt;equal&lt;space&gt;&lt;openbracket&gt;FME_GetAttribute&lt;space&gt;&lt;quote&gt;&lt;dollar&gt;base&lt;opencurly&gt;&lt;dollar&gt;i&lt;closecurly&gt;&lt;dollar&gt;suffix&lt;quote&gt;&lt;closebracket&gt;&lt;space&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;closebracket&gt;&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;lappend&lt;space&gt;indices&lt;space&gt;&lt;dollar&gt;i&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;EXACT_MATCH&lt;quote&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;for&lt;space&gt;&lt;opencurly&gt;set&lt;space&gt;i&lt;space&gt;0&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;dollar&gt;i&lt;space&gt;&lt;lt&gt;=&lt;space&gt;&lt;dollar&gt;maxIndex&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;incr&lt;space&gt;i&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;&lt;openbracket&gt;string&lt;space&gt;equal&lt;space&gt;&lt;dollar&gt;exp&lt;space&gt;&lt;openbracket&gt;attrValue&lt;space&gt;&lt;quote&gt;&lt;dollar&gt;base&lt;opencurly&gt;&lt;dollar&gt;i&lt;closecurly&gt;&lt;dollar&gt;suffix&lt;quote&gt;&lt;space&gt;&lt;dollar&gt;isNoCase&lt;closebracket&gt;&lt;closebracket&gt;&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;lappend&lt;space&gt;indices&lt;space&gt;&lt;dollar&gt;i&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;CONTAINS&lt;quote&gt;&lt;space&gt;&lt;opencurly&gt;set&lt;space&gt;exp&lt;space&gt;&lt;quote&gt;*&lt;openbracket&gt;matchString&lt;space&gt;&lt;dollar&gt;exp&lt;closebracket&gt;*&lt;quote&gt;&lt;semicolon&gt;&lt;space&gt;set&lt;space&gt;doMatch&lt;space&gt;1&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;BEGINS_WITH&lt;quote&gt;&lt;space&gt;&lt;opencurly&gt;set&lt;space&gt;exp&lt;space&gt;&lt;quote&gt;&lt;openbracket&gt;matchString&lt;space&gt;&lt;dollar&gt;exp&lt;closebracket&gt;*&lt;quote&gt;&lt;semicolon&gt;&lt;space&gt;set&lt;space&gt;doMatch&lt;space&gt;1&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;ENDS_WITH&lt;quote&gt;&lt;space&gt;&lt;opencurly&gt;set&lt;space&gt;exp&lt;space&gt;&lt;quote&gt;*&lt;openbracket&gt;matchString&lt;space&gt;&lt;dollar&gt;exp&lt;closebracket&gt;&lt;quote&gt;&lt;semicolon&gt;&lt;space&gt;set&lt;space&gt;doMatch&lt;space&gt;1&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;REGEX_MATCH&lt;quote&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;for&lt;space&gt;&lt;opencurly&gt;set&lt;space&gt;i&lt;space&gt;0&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;dollar&gt;i&lt;space&gt;&lt;lt&gt;=&lt;space&gt;&lt;dollar&gt;maxIndex&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;incr&lt;space&gt;i&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;&lt;openbracket&gt;catch&lt;space&gt;&lt;opencurly&gt;regexp&lt;space&gt;&lt;dollar&gt;exp&lt;space&gt;&lt;openbracket&gt;attrValue&lt;space&gt;&lt;quote&gt;&lt;dollar&gt;base&lt;opencurly&gt;&lt;dollar&gt;i&lt;closecurly&gt;&lt;dollar&gt;suffix&lt;quote&gt;&lt;space&gt;&lt;dollar&gt;isNoCase&lt;closebracket&gt;&lt;closecurly&gt;&lt;space&gt;matched&lt;closebracket&gt;&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;&lt;quote&gt;failed&lt;space&gt;interpreting&lt;space&gt;regular&lt;space&gt;expression:&lt;space&gt;&lt;openbracket&gt;FME_GetAttribute&lt;space&gt;__listelementfilter.exp&lt;closebracket&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;space&gt;elseif&lt;space&gt;&lt;opencurly&gt;&lt;dollar&gt;matched&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;lappend&lt;space&gt;indices&lt;space&gt;&lt;dollar&gt;i&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;NUMERIC_VALUE&lt;quote&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;for&lt;space&gt;&lt;opencurly&gt;set&lt;space&gt;i&lt;space&gt;0&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;dollar&gt;i&lt;space&gt;&lt;lt&gt;=&lt;space&gt;&lt;dollar&gt;maxIndex&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;incr&lt;space&gt;i&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;&lt;openbracket&gt;string&lt;space&gt;is&lt;space&gt;double&lt;space&gt;-strict&lt;space&gt;&lt;openbracket&gt;FME_GetAttribute&lt;space&gt;&lt;quote&gt;&lt;dollar&gt;base&lt;opencurly&gt;&lt;dollar&gt;i&lt;closecurly&gt;&lt;dollar&gt;suffix&lt;quote&gt;&lt;closebracket&gt;&lt;closebracket&gt;&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;lappend&lt;space&gt;indices&lt;space&gt;&lt;dollar&gt;i&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;quote&gt;NUMERIC_RANGE&lt;quote&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;exp&lt;space&gt;&lt;openbracket&gt;string&lt;space&gt;trim&lt;space&gt;&lt;openbracket&gt;string&lt;space&gt;map&lt;space&gt;&lt;opencurly&gt;&lt;openparen&gt;&lt;space&gt;&lt;lt&gt;&lt;space&gt;&lt;openbracket&gt;&lt;space&gt;&lt;lt&gt;=&lt;space&gt;&lt;closeparen&gt;&lt;space&gt;&lt;lt&gt;&lt;space&gt;&lt;closebracket&gt;&lt;space&gt;&lt;lt&gt;=&lt;closecurly&gt;&lt;space&gt;&lt;dollar&gt;exp&lt;closebracket&gt;&lt;closebracket&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;!&lt;openbracket&gt;regexp&lt;space&gt;&lt;opencurly&gt;^&lt;openparen&gt;&lt;lt&gt;=?&lt;closeparen&gt;&lt;backslash&gt;s*&lt;openparen&gt;.*&lt;closeparen&gt;&lt;backslash&gt;s*&lt;comma&gt;&lt;backslash&gt;s*&lt;openparen&gt;.*&lt;closeparen&gt;&lt;backslash&gt;s*&lt;openparen&gt;&lt;lt&gt;=?&lt;closeparen&gt;&lt;dollar&gt;&lt;closecurly&gt;&lt;space&gt;&lt;space&gt;&lt;dollar&gt;exp&lt;space&gt;m&lt;space&gt;op1&lt;space&gt;lower&lt;space&gt;upper&lt;space&gt;op2&lt;closebracket&gt;&lt;space&gt;&lt;backslash&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;||&lt;space&gt;!&lt;openparen&gt;&lt;openbracket&gt;string&lt;space&gt;is&lt;space&gt;double&lt;space&gt;&lt;dollar&gt;lower&lt;closebracket&gt;&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;&lt;openbracket&gt;string&lt;space&gt;is&lt;space&gt;double&lt;space&gt;&lt;dollar&gt;upper&lt;closebracket&gt;&lt;closeparen&gt;&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;&lt;quote&gt;failed&lt;space&gt;interpreting&lt;space&gt;numeric&lt;space&gt;range&lt;space&gt;expression:&lt;space&gt;&lt;openbracket&gt;FME_GetAttribute&lt;space&gt;__listelementfilter.exp&lt;closebracket&gt;&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;for&lt;space&gt;&lt;opencurly&gt;set&lt;space&gt;i&lt;space&gt;0&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;dollar&gt;i&lt;space&gt;&lt;lt&gt;=&lt;space&gt;&lt;dollar&gt;maxIndex&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;incr&lt;space&gt;i&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;value&lt;space&gt;&lt;openbracket&gt;FME_GetAttribute&lt;space&gt;&lt;quote&gt;&lt;dollar&gt;base&lt;opencurly&gt;&lt;dollar&gt;i&lt;closecurly&gt;&lt;dollar&gt;suffix&lt;quote&gt;&lt;closebracket&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;&lt;openbracket&gt;string&lt;space&gt;is&lt;space&gt;double&lt;space&gt;-strict&lt;space&gt;&lt;dollar&gt;value&lt;closebracket&gt;&lt;space&gt;&lt;backslash&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;&lt;openparen&gt;&lt;openbracket&gt;string&lt;space&gt;equal&lt;space&gt;&lt;dollar&gt;lower&lt;space&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;closebracket&gt;&lt;space&gt;||&lt;space&gt;&lt;openbracket&gt;expr&lt;space&gt;&lt;dollar&gt;lower&lt;space&gt;&lt;dollar&gt;op1&lt;space&gt;&lt;dollar&gt;value&lt;closebracket&gt;&lt;closeparen&gt;&lt;space&gt;&lt;backslash&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;&lt;openparen&gt;&lt;openbracket&gt;string&lt;space&gt;equal&lt;space&gt;&lt;dollar&gt;upper&lt;space&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;closebracket&gt;&lt;space&gt;||&lt;space&gt;&lt;openbracket&gt;expr&lt;space&gt;&lt;dollar&gt;value&lt;space&gt;&lt;dollar&gt;op2&lt;space&gt;&lt;dollar&gt;upper&lt;closebracket&gt;&lt;closeparen&gt;&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;lappend&lt;space&gt;indices&lt;space&gt;&lt;dollar&gt;i&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;default&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;&lt;quote&gt;debug&lt;space&gt;-&lt;space&gt;undefined&lt;space&gt;filter&lt;space&gt;type:&lt;space&gt;&lt;dollar&gt;filterType&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;&lt;dollar&gt;doMatch&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;for&lt;space&gt;&lt;opencurly&gt;set&lt;space&gt;i&lt;space&gt;0&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;dollar&gt;i&lt;space&gt;&lt;lt&gt;=&lt;space&gt;&lt;dollar&gt;maxIndex&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;incr&lt;space&gt;i&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;&lt;openbracket&gt;string&lt;space&gt;match&lt;space&gt;&lt;dollar&gt;exp&lt;space&gt;&lt;openbracket&gt;attrValue&lt;space&gt;&lt;quote&gt;&lt;dollar&gt;base&lt;opencurly&gt;&lt;dollar&gt;i&lt;closecurly&gt;&lt;dollar&gt;suffix&lt;quote&gt;&lt;space&gt;&lt;dollar&gt;isNoCase&lt;closebracket&gt;&lt;closebracket&gt;&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;lappend&lt;space&gt;indices&lt;space&gt;&lt;dollar&gt;i&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;&lt;openbracket&gt;string&lt;space&gt;equal&lt;space&gt;&lt;openbracket&gt;FME_GetAttribute&lt;space&gt;&lt;quote&gt;__listelementfilter.negate&lt;quote&gt;&lt;closebracket&gt;&lt;space&gt;&lt;quote&gt;Yes&lt;quote&gt;&lt;closebracket&gt;&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;t&lt;space&gt;&lt;opencurly&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;indices&lt;space&gt;&lt;openbracket&gt;lsort&lt;space&gt;&lt;dollar&gt;indices&lt;closebracket&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;&lt;openbracket&gt;string&lt;space&gt;equal&lt;space&gt;&lt;dollar&gt;filterType&lt;space&gt;&lt;quote&gt;NUMERIC_RANGE&lt;quote&gt;&lt;closebracket&gt;&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;for&lt;space&gt;&lt;opencurly&gt;set&lt;space&gt;i&lt;space&gt;0&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;dollar&gt;i&lt;space&gt;&lt;lt&gt;=&lt;space&gt;&lt;dollar&gt;maxIndex&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;incr&lt;space&gt;i&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;&lt;openbracket&gt;lsearch&lt;space&gt;-sorted&lt;space&gt;&lt;dollar&gt;indices&lt;space&gt;&lt;dollar&gt;i&lt;closebracket&gt;&lt;space&gt;&lt;lt&gt;&lt;space&gt;0&lt;space&gt;&lt;backslash&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;amp&gt;&lt;amp&gt;&lt;space&gt;&lt;openbracket&gt;string&lt;space&gt;is&lt;space&gt;double&lt;space&gt;-strict&lt;space&gt;&lt;openbracket&gt;FME_GetAttribute&lt;space&gt;&lt;quote&gt;&lt;dollar&gt;base&lt;opencurly&gt;&lt;dollar&gt;i&lt;closecurly&gt;&lt;dollar&gt;suffix&lt;quote&gt;&lt;closebracket&gt;&lt;closebracket&gt;&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;lappend&lt;space&gt;t&lt;space&gt;&lt;dollar&gt;i&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;space&gt;else&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;for&lt;space&gt;&lt;opencurly&gt;set&lt;space&gt;i&lt;space&gt;0&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;dollar&gt;i&lt;space&gt;&lt;lt&gt;=&lt;space&gt;&lt;dollar&gt;maxIndex&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;incr&lt;space&gt;i&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;&lt;openbracket&gt;lsearch&lt;space&gt;-sorted&lt;space&gt;&lt;dollar&gt;indices&lt;space&gt;&lt;dollar&gt;i&lt;closebracket&gt;&lt;space&gt;&lt;lt&gt;&lt;space&gt;0&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;lappend&lt;space&gt;t&lt;space&gt;&lt;dollar&gt;i&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;indices&lt;space&gt;&lt;dollar&gt;t&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;0&lt;space&gt;&lt;lt&gt;&lt;space&gt;&lt;openbracket&gt;llength&lt;space&gt;&lt;dollar&gt;indices&lt;closebracket&gt;&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;index&lt;space&gt;0&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;foreach&lt;space&gt;oldIndex&lt;space&gt;&lt;openbracket&gt;lsort&lt;space&gt;-integer&lt;space&gt;&lt;dollar&gt;indices&lt;closebracket&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;&lt;dollar&gt;index&lt;space&gt;!=&lt;space&gt;&lt;dollar&gt;oldIndex&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;foreach&lt;space&gt;s&lt;space&gt;&lt;dollar&gt;suffixes&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;set&lt;space&gt;oldName&lt;space&gt;&lt;quote&gt;&lt;dollar&gt;base&lt;opencurly&gt;&lt;dollar&gt;oldIndex&lt;closecurly&gt;&lt;dollar&gt;s&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;if&lt;space&gt;&lt;opencurly&gt;&lt;openbracket&gt;FME_AttributeExists&lt;space&gt;&lt;dollar&gt;oldName&lt;closebracket&gt;&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;FME_RenameAttribute&lt;space&gt;&lt;quote&gt;&lt;dollar&gt;base&lt;opencurly&gt;&lt;dollar&gt;index&lt;closecurly&gt;&lt;dollar&gt;s&lt;quote&gt;&lt;space&gt;&lt;dollar&gt;oldName&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;space&gt;else&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;FME_UnsetAttributes&lt;space&gt;&lt;quote&gt;&lt;dollar&gt;base&lt;opencurly&gt;&lt;dollar&gt;index&lt;closecurly&gt;&lt;dollar&gt;s&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;incr&lt;space&gt;index&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;while&lt;space&gt;&lt;opencurly&gt;&lt;dollar&gt;index&lt;space&gt;&lt;lt&gt;=&lt;space&gt;&lt;dollar&gt;maxIndex&lt;closecurly&gt;&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;foreach&lt;space&gt;s&lt;space&gt;&lt;dollar&gt;suffixes&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;FME_UnsetAttributes&lt;space&gt;&lt;quote&gt;&lt;dollar&gt;base&lt;opencurly&gt;&lt;dollar&gt;index&lt;closecurly&gt;&lt;dollar&gt;s&lt;quote&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;incr&lt;space&gt;index&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;filtered&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;space&gt;else&lt;space&gt;&lt;opencurly&gt;&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;return&lt;space&gt;not_found&lt;lf&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;space&gt;&lt;closecurly&gt;&lt;lf&gt;&lt;closecurly&gt;"/>
#!     <XFORM_PARM PARM_NAME="SRCFILE" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TCLNUMCOPIES" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TCLPROG" PARM_VALUE="filterListElements"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="VAL_ATTR" PARM_VALUE="__listelementfilter.result"/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="TclCaller"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="13"
#!   TYPE="AttributeRenamer"
#!   VERSION="3"
#!   POSITION="2352 -390.50099999999998"
#!   BOUNDING_RECT="2352 -390.50099999999998 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="15575"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.list_attr" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.filter_type" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.case" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.exp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.negate" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="_rejected_reason" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ATTR_LIST" PARM_VALUE="__listelementfilter.result,_rejected_reason,"/>
#!     <XFORM_PARM PARM_NAME="ATTR_LIST_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="AttributeRenamer"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="12"
#!   TYPE="TestFilter"
#!   VERSION="1"
#!   POSITION="1772.01 -81.5"
#!   BOUNDING_RECT="1772.01 -81.5 431 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="15575"
#! >
#!     <OUTPUT_FEAT NAME="filtered"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.list_attr" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.filter_type" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.case" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.exp" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.negate" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.result" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="not_found"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.list_attr" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.filter_type" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.case" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.exp" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.negate" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.result" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <OUTPUT_FEAT NAME="&lt;lt&gt;UNFILTERED&lt;gt&gt;"/>
#!     <FEAT_COLLAPSED COLLAPSED="2"/>
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.list_attr" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.filter_type" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.case" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.exp" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.negate" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="__listelementfilter.result" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_PARM PARM_NAME="DEFAULT_VALUE" PARM_VALUE="&lt;lt&gt;UNFILTERED&lt;gt&gt;"/>
#!     <XFORM_PARM PARM_NAME="TESTLISTGRP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TEST_LIST" PARM_VALUE="BOOL_OP&lt;comma&gt;OR&lt;comma&gt;COMPOSITE_TEST&lt;comma&gt;&lt;lt&gt;Unused&lt;gt&gt;&lt;comma&gt;TEST_CLAUSE&lt;comma&gt;&lt;quote&gt;TEST&lt;space&gt;&lt;lt&gt;at&lt;gt&gt;Value&lt;lt&gt;openparen&lt;gt&gt;__listelementfilter.result&lt;lt&gt;closeparen&lt;gt&gt;&lt;space&gt;=&lt;space&gt;filtered&lt;quote&gt;,filtered,BOOL_OP&lt;comma&gt;OR&lt;comma&gt;COMPOSITE_TEST&lt;comma&gt;&lt;lt&gt;Unused&lt;gt&gt;&lt;comma&gt;TEST_CLAUSE&lt;comma&gt;&lt;quote&gt;TEST&lt;space&gt;&lt;lt&gt;at&lt;gt&gt;Value&lt;lt&gt;openparen&lt;gt&gt;__listelementfilter.result&lt;lt&gt;closeparen&lt;gt&gt;&lt;space&gt;=&lt;space&gt;not_found&lt;quote&gt;,not_found"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="TestFilter"/>
#! </TRANSFORMER>
#! </TRANSFORMERS>
#! <SUBDOCUMENT_IOS>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="1"
#!   NAME="Input"
#!   POSITION="100 -100"
#!   BOUNDING_RECT="100 -100 431 71"
#!   COLLAPSED="true"
#!   PUBLISHED="true"
#!   IS_SOURCE="true"
#!   ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="2"
#!   NAME="Filtered"
#!   POSITION="2352 -30.499500000000001"
#!   BOUNDING_RECT="2352 -30.499500000000001 431 71"
#!   COLLAPSED="true"
#!   IS_SOURCE="false"
#!   ATTR_MODE="1"
#! >
#! </SUBDOCUMENT_IO>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="8"
#!   NAME="&lt;Rejected&gt;"
#!   POSITION="2904.0100000000002 -390.50099999999998"
#!   BOUNDING_RECT="2904.0100000000002 -390.50099999999998 431 71"
#!   COLLAPSED="false"
#!   IS_SOURCE="false"
#!   ATTR_MODE="1"
#! >
#!     <XFORM_ATTR ATTR_NAME="_rejected_reason" ATTR_TYPE="buffer" />
#! </SUBDOCUMENT_IO>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="16"
#!   NAME="NotFound"
#!   POSITION="2352 -206.501"
#!   BOUNDING_RECT="2352 -206.501 431 71"
#!   COLLAPSED="true"
#!   IS_SOURCE="false"
#!   ATTR_MODE="1"
#! >
#! </SUBDOCUMENT_IO>
#! </SUBDOCUMENT_IOS>
#! <FEAT_LINKS>
#! <FEAT_LINK
#!   IDENTIFIER="5"
#!   SOURCE_NODE="1"
#!   TARGET_NODE="4"
#!   SOURCE_PORT_DESC="0"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="7"
#!   SOURCE_NODE="4"
#!   TARGET_NODE="6"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="14"
#!   SOURCE_NODE="6"
#!   TARGET_NODE="12"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="18"
#!   SOURCE_NODE="12"
#!   TARGET_NODE="2"
#!   SOURCE_PORT_DESC="fo 0 filtered"
#!   TARGET_PORT_DESC="0"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="15"
#!   SOURCE_NODE="13"
#!   TARGET_NODE="8"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="0"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="19"
#!   SOURCE_NODE="12"
#!   TARGET_NODE="16"
#!   SOURCE_PORT_DESC="fo 1 not_found"
#!   TARGET_PORT_DESC="0"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="17"
#!   SOURCE_NODE="12"
#!   TARGET_NODE="13"
#!   SOURCE_PORT_DESC="fo 2 &lt;lt&gt;lt&lt;gt&gt;UNFILTERED&lt;lt&gt;gt&lt;gt&gt;"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   COLOUR="0,0,0,1"
#!   PEN_WIDTH="4"
#!   PEN_STYLE="1"
#!   LINK_STYLE_NAME="&lt;Default&gt;"
#!   EXTRA_POINTS=""
#! />
#! </FEAT_LINKS>
#! <BREAKPOINTS>
#! </BREAKPOINTS>
#! <ATTR_LINKS>
#! </ATTR_LINKS>
#! <SUBDOCUMENTS>
#! </SUBDOCUMENTS>
#! <LOOKUP_TABLES>
#! </LOOKUP_TABLES>
#! </TRANSFORMER>

DEFAULT_MACRO $(ListElementFilter_WORKSPACE_NAME)_LIST_ATTR 
DEFAULT_MACRO $(ListElementFilter_WORKSPACE_NAME)_FILTER_TYPE HAS_VALUE
DEFAULT_MACRO $(ListElementFilter_WORKSPACE_NAME)_EXP 
DEFAULT_MACRO $(ListElementFilter_WORKSPACE_NAME)_CASE No
DEFAULT_MACRO $(ListElementFilter_WORKSPACE_NAME)_NEGATE No
#! START_HEADER
#! END_HEADER

DEFAULT_MACRO WB_CURRENT_CONTEXT
DEFAULT_MACRO ListElementFilter_WORKSPACE_NAME ""
INCLUDE [puts {MACRO WB_OLD_CONTEXT_$(ListElementFilter_WORKSPACE_NAME) $(WB_CURRENT_CONTEXT)};          puts {MACRO WB_CURRENT_CONTEXT $(ListElementFilter_WORKSPACE_NAME)}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(ListElementFilter_WORKSPACE_NAME)_Input1669220493 Input Splitter"   INPUT FEATURE_TYPE "$(ListElementFilter_WORKSPACE_NAME)_Input"   OUTPUT FEATURE_TYPE "$(ListElementFilter_WORKSPACE_NAME)_Input"
# -------------------------------------------------------------------------
Tcl2 proc $(ListElementFilter_WORKSPACE_NAME)_ParameterFetcher_doFetch {} {    foreach {name val} {"__listelementfilter.list_attr {$($(ListElementFilter_WORKSPACE_NAME)_LIST_ATTR)} __listelementfilter.filter_type {$($(ListElementFilter_WORKSPACE_NAME)_FILTER_TYPE)} __listelementfilter.case {$($(ListElementFilter_WORKSPACE_NAME)_CASE$encode)} __listelementfilter.exp {$($(ListElementFilter_WORKSPACE_NAME)_EXP$encode)} __listelementfilter.negate {$($(ListElementFilter_WORKSPACE_NAME)_NEGATE$encode)}"} {         if { [string match {*<at>*} $val] == 1 } {             set val [FME_Execute EvaluateExpression {STRING} $val {$(ListElementFilter_WORKSPACE_NAME)_ParameterFetcher}];         } elseif {[string match {*FME_CONDITIONAL*} $val] == 1} {             set val [FME_Execute EvaluateExpression {STRING} $val {$(ListElementFilter_WORKSPACE_NAME)_ParameterFetcher}];         } else {             set val [FME_DecodeTextOrAttr $val];         };       FME_SetAttribute [FME_DecodeText $name] $val    } }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(ListElementFilter_WORKSPACE_NAME)_ParameterFetcher    INPUT  FEATURE_TYPE "$(ListElementFilter_WORKSPACE_NAME)_Input"    OUTPUT FEATURE_TYPE "$(ListElementFilter_WORKSPACE_NAME)_ParameterFetcher_OUTPUT"         @Tcl2($(ListElementFilter_WORKSPACE_NAME)_ParameterFetcher_doFetch)
# -------------------------------------------------------------------------
Tcl2 FME_Decode proc<space>filterListElements<space><opencurly><closecurly><space><opencurly><lf><space><space><space><space>set<space>listAttr<space><openbracket>FME_GetAttribute<space><quote>__listelementfilter.list_attr<quote><closebracket><lf><space><space><space><space>if<space><opencurly>!<openbracket>regexp<space><opencurly>^<openparen><openbracket>^<opencurly><closecurly><closebracket>+<closeparen><opencurly><closecurly><openparen><backslash>.<openbracket>^<opencurly><closecurly><closebracket>+<closeparen>?<dollar><closecurly><space><space><dollar>listAttr<space>m<space>base<space>suffix<closebracket><closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space>return<space><quote>failed<space>interpreting<space>source<space>list<space>name:<space><dollar>listAttr<quote><lf><space><space><space><space><closecurly><lf><space><space><space><space><lf><space><space><space><space>set<space>maxIndex<space>-1<lf><space><space><space><space>set<space>suffixes<space><opencurly><closecurly><lf><space><space><space><space>if<space><opencurly><openbracket>string<space>equal<space><dollar>suffix<space><opencurly><closecurly><closebracket><closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space>set<space>listAttrPattern<space><quote>^<dollar>base<opencurly><openparen><backslash><backslash>d+<closeparen><closecurly><openparen><closeparen><backslash><dollar><quote><lf><space><space><space><space><closecurly><space>else<space><opencurly><lf><space><space><space><space><space><space><space><space>set<space>listAttrPattern<space><quote>^<dollar>base<opencurly><openparen><backslash><backslash>d+<closeparen><closecurly><openparen><backslash><backslash>.<backslash><openbracket>^<opencurly><closecurly><backslash><closebracket>+<closeparen><backslash><dollar><quote><lf><space><space><space><space><closecurly><lf><space><space><space><space>foreach<space>attr<space><openbracket>FME_AttributeNames<closebracket><space><opencurly><lf><space><space><space><space><space><space><space><space>if<space><opencurly><openbracket>regexp<space><dollar>listAttrPattern<space><dollar>attr<space>m<space>i<space>s<closebracket><closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>if<space><opencurly><dollar>maxIndex<space><lt><space><dollar>i<closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>set<space>maxIndex<space><dollar>i<lf><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>if<space><opencurly><openbracket>lsearch<space><dollar>suffixes<space><dollar>s<closebracket><space><lt><space>0<closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>lappend<space>suffixes<space><dollar>s<lf><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><closecurly><lf><space><space><space><space><lf><space><space><space><space>set<space>isNoCase<space><openbracket>string<space>equal<space><openbracket>FME_GetAttribute<space><quote>__listelementfilter.case<quote><closebracket><space><quote>No<quote><closebracket><lf><space><space><space><space>if<space><opencurly><dollar>isNoCase<closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space>set<space>exp<space><openbracket>string<space>tolower<space><openbracket>FME_GetAttribute<space><quote>__listelementfilter.exp<quote><closebracket><closebracket><lf><space><space><space><space><closecurly><space>else<space><opencurly><lf><space><space><space><space><space><space><space><space>set<space>exp<space><openbracket>FME_GetAttribute<space><quote>__listelementfilter.exp<quote><closebracket><lf><space><space><space><space><closecurly><lf><space><space><space><space>proc<space>attrValue<space><opencurly>attr<space>isNoCase<closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space>if<space><opencurly><dollar>isNoCase<closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>return<space><openbracket>string<space>tolower<space><openbracket>FME_GetAttribute<space><dollar>attr<closebracket><closebracket><lf><space><space><space><space><space><space><space><space><closecurly><space>else<space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>return<space><openbracket>FME_GetAttribute<space><dollar>attr<closebracket><lf><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><closecurly><lf><space><space><space><space>proc<space>matchString<space><opencurly>s<closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space>return<space><openbracket>string<space>map<space><opencurly><backslash><backslash><space><backslash><backslash><backslash><backslash><space>*<space><backslash><backslash>*<space>?<space><backslash><backslash>?<space><backslash><openbracket><space><backslash><backslash><backslash><openbracket><space><backslash><closebracket><space><backslash><backslash><backslash><closebracket><closecurly><space><dollar>s<closebracket><lf><space><space><space><space><closecurly><lf><space><space><space><space><lf><space><space><space><space>set<space>indices<space><opencurly><closecurly><lf><space><space><space><space>set<space>doMatch<space>0<lf><space><space><space><space>set<space>filterType<space><openbracket>FME_GetAttribute<space><quote>__listelementfilter.filter_type<quote><closebracket><lf><space><space><space><space>switch<space><space><dollar>filterType<space><opencurly><lf><space><space><space><space><space><space><space><space><quote>HAS_VALUE<quote><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>for<space><opencurly>set<space>i<space>0<closecurly><space><opencurly><dollar>i<space><lt>=<space><dollar>maxIndex<closecurly><space><opencurly>incr<space>i<closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>if<space><opencurly>!<openbracket>string<space>equal<space><openbracket>FME_GetAttribute<space><quote><dollar>base<opencurly><dollar>i<closecurly><dollar>suffix<quote><closebracket><space><opencurly><closecurly><closebracket><closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>lappend<space>indices<space><dollar>i<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><quote>EXACT_MATCH<quote><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>for<space><opencurly>set<space>i<space>0<closecurly><space><opencurly><dollar>i<space><lt>=<space><dollar>maxIndex<closecurly><space><opencurly>incr<space>i<closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>if<space><opencurly><openbracket>string<space>equal<space><dollar>exp<space><openbracket>attrValue<space><quote><dollar>base<opencurly><dollar>i<closecurly><dollar>suffix<quote><space><dollar>isNoCase<closebracket><closebracket><closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>lappend<space>indices<space><dollar>i<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><quote>CONTAINS<quote><space><opencurly>set<space>exp<space><quote>*<openbracket>matchString<space><dollar>exp<closebracket>*<quote><semicolon><space>set<space>doMatch<space>1<closecurly><lf><space><space><space><space><space><space><space><space><quote>BEGINS_WITH<quote><space><opencurly>set<space>exp<space><quote><openbracket>matchString<space><dollar>exp<closebracket>*<quote><semicolon><space>set<space>doMatch<space>1<closecurly><lf><space><space><space><space><space><space><space><space><quote>ENDS_WITH<quote><space><opencurly>set<space>exp<space><quote>*<openbracket>matchString<space><dollar>exp<closebracket><quote><semicolon><space>set<space>doMatch<space>1<closecurly><lf><space><space><space><space><space><space><space><space><quote>REGEX_MATCH<quote><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>for<space><opencurly>set<space>i<space>0<closecurly><space><opencurly><dollar>i<space><lt>=<space><dollar>maxIndex<closecurly><space><opencurly>incr<space>i<closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>if<space><opencurly><openbracket>catch<space><opencurly>regexp<space><dollar>exp<space><openbracket>attrValue<space><quote><dollar>base<opencurly><dollar>i<closecurly><dollar>suffix<quote><space><dollar>isNoCase<closebracket><closecurly><space>matched<closebracket><closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>return<space><quote>failed<space>interpreting<space>regular<space>expression:<space><openbracket>FME_GetAttribute<space>__listelementfilter.exp<closebracket><quote><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><space>elseif<space><opencurly><dollar>matched<closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>lappend<space>indices<space><dollar>i<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><quote>NUMERIC_VALUE<quote><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>for<space><opencurly>set<space>i<space>0<closecurly><space><opencurly><dollar>i<space><lt>=<space><dollar>maxIndex<closecurly><space><opencurly>incr<space>i<closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>if<space><opencurly><openbracket>string<space>is<space>double<space>-strict<space><openbracket>FME_GetAttribute<space><quote><dollar>base<opencurly><dollar>i<closecurly><dollar>suffix<quote><closebracket><closebracket><closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>lappend<space>indices<space><dollar>i<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><quote>NUMERIC_RANGE<quote><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>set<space>exp<space><openbracket>string<space>trim<space><openbracket>string<space>map<space><opencurly><openparen><space><lt><space><openbracket><space><lt>=<space><closeparen><space><lt><space><closebracket><space><lt>=<closecurly><space><dollar>exp<closebracket><closebracket><lf><space><space><space><space><space><space><space><space><space><space><space><space>if<space><opencurly>!<openbracket>regexp<space><opencurly>^<openparen><lt>=?<closeparen><backslash>s*<openparen>.*<closeparen><backslash>s*<comma><backslash>s*<openparen>.*<closeparen><backslash>s*<openparen><lt>=?<closeparen><dollar><closecurly><space><space><dollar>exp<space>m<space>op1<space>lower<space>upper<space>op2<closebracket><space><backslash><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>||<space>!<openparen><openbracket>string<space>is<space>double<space><dollar>lower<closebracket><space><amp><amp><space><openbracket>string<space>is<space>double<space><dollar>upper<closebracket><closeparen><closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>return<space><quote>failed<space>interpreting<space>numeric<space>range<space>expression:<space><openbracket>FME_GetAttribute<space>__listelementfilter.exp<closebracket><quote><lf><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>for<space><opencurly>set<space>i<space>0<closecurly><space><opencurly><dollar>i<space><lt>=<space><dollar>maxIndex<closecurly><space><opencurly>incr<space>i<closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>set<space>value<space><openbracket>FME_GetAttribute<space><quote><dollar>base<opencurly><dollar>i<closecurly><dollar>suffix<quote><closebracket><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>if<space><opencurly><openbracket>string<space>is<space>double<space>-strict<space><dollar>value<closebracket><space><backslash><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><amp><amp><space><openparen><openbracket>string<space>equal<space><dollar>lower<space><opencurly><closecurly><closebracket><space>||<space><openbracket>expr<space><dollar>lower<space><dollar>op1<space><dollar>value<closebracket><closeparen><space><backslash><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><amp><amp><space><openparen><openbracket>string<space>equal<space><dollar>upper<space><opencurly><closecurly><closebracket><space>||<space><openbracket>expr<space><dollar>value<space><dollar>op2<space><dollar>upper<closebracket><closeparen><closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>lappend<space>indices<space><dollar>i<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space>default<space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>return<space><quote>debug<space>-<space>undefined<space>filter<space>type:<space><dollar>filterType<quote><lf><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><closecurly><lf><space><space><space><space>if<space><opencurly><dollar>doMatch<closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space>for<space><opencurly>set<space>i<space>0<closecurly><space><opencurly><dollar>i<space><lt>=<space><dollar>maxIndex<closecurly><space><opencurly>incr<space>i<closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>if<space><opencurly><openbracket>string<space>match<space><dollar>exp<space><openbracket>attrValue<space><quote><dollar>base<opencurly><dollar>i<closecurly><dollar>suffix<quote><space><dollar>isNoCase<closebracket><closebracket><closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>lappend<space>indices<space><dollar>i<lf><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><closecurly><lf><space><space><space><space><lf><space><space><space><space>if<space><opencurly><openbracket>string<space>equal<space><openbracket>FME_GetAttribute<space><quote>__listelementfilter.negate<quote><closebracket><space><quote>Yes<quote><closebracket><closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space>set<space>t<space><opencurly><closecurly><lf><space><space><space><space><space><space><space><space>set<space>indices<space><openbracket>lsort<space><dollar>indices<closebracket><lf><space><space><space><space><space><space><space><space>if<space><opencurly><openbracket>string<space>equal<space><dollar>filterType<space><quote>NUMERIC_RANGE<quote><closebracket><closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>for<space><opencurly>set<space>i<space>0<closecurly><space><opencurly><dollar>i<space><lt>=<space><dollar>maxIndex<closecurly><space><opencurly>incr<space>i<closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>if<space><opencurly><openbracket>lsearch<space>-sorted<space><dollar>indices<space><dollar>i<closebracket><space><lt><space>0<space><backslash><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><amp><amp><space><openbracket>string<space>is<space>double<space>-strict<space><openbracket>FME_GetAttribute<space><quote><dollar>base<opencurly><dollar>i<closecurly><dollar>suffix<quote><closebracket><closebracket><closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>lappend<space>t<space><dollar>i<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><closecurly><space>else<space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>for<space><opencurly>set<space>i<space>0<closecurly><space><opencurly><dollar>i<space><lt>=<space><dollar>maxIndex<closecurly><space><opencurly>incr<space>i<closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>if<space><opencurly><openbracket>lsearch<space>-sorted<space><dollar>indices<space><dollar>i<closebracket><space><lt><space>0<closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>lappend<space>t<space><dollar>i<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space>set<space>indices<space><dollar>t<lf><space><space><space><space><closecurly><lf><lf><space><space><space><space>if<space><opencurly>0<space><lt><space><openbracket>llength<space><dollar>indices<closebracket><closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space>set<space>index<space>0<lf><space><space><space><space><space><space><space><space>foreach<space>oldIndex<space><openbracket>lsort<space>-integer<space><dollar>indices<closebracket><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>if<space><opencurly><dollar>index<space>!=<space><dollar>oldIndex<closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>foreach<space>s<space><dollar>suffixes<space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>set<space>oldName<space><quote><dollar>base<opencurly><dollar>oldIndex<closecurly><dollar>s<quote><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>if<space><opencurly><openbracket>FME_AttributeExists<space><dollar>oldName<closebracket><closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>FME_RenameAttribute<space><quote><dollar>base<opencurly><dollar>index<closecurly><dollar>s<quote><space><dollar>oldName<lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><space>else<space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>FME_UnsetAttributes<space><quote><dollar>base<opencurly><dollar>index<closecurly><dollar>s<quote><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>incr<space>index<lf><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space>while<space><opencurly><dollar>index<space><lt>=<space><dollar>maxIndex<closecurly><space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>foreach<space>s<space><dollar>suffixes<space><opencurly><lf><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space><space>FME_UnsetAttributes<space><quote><dollar>base<opencurly><dollar>index<closecurly><dollar>s<quote><lf><space><space><space><space><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space><space><space><space><space>incr<space>index<lf><space><space><space><space><space><space><space><space><closecurly><lf><space><space><space><space><space><space><space><space>return<space>filtered<lf><space><space><space><space><closecurly><space>else<space><opencurly><lf><space><space><space><space><space><space><space><space>return<space>not_found<lf><space><space><space><space><closecurly><lf><closecurly>
MACRO COPIER @Tcl2("")
INCLUDE [ if {[string length {}] == 0} {             puts {MACRO COPIER 1} }
MACRO OUTPUTATTR "__listelementfilter.result"
INCLUDE [ if {[string length {__listelementfilter.result}] == 0} {             puts {MACRO OUTPUTATTR } }
FACTORY_DEF * TeeFactory    FACTORY_NAME $(ListElementFilter_WORKSPACE_NAME)_TclCaller    INPUT  FEATURE_TYPE "$(ListElementFilter_WORKSPACE_NAME)_ParameterFetcher_OUTPUT"    NUMBER_OF_COPIES $(COPIER)    OUTPUT FEATURE_TYPE "$(ListElementFilter_WORKSPACE_NAME)_TclCaller_OUTPUT"         $(OUTPUTATTR) @Tcl2("filterListElements")
# -------------------------------------------------------------------------
FACTORY_DEF * TeeFactory    FACTORY_NAME $(ListElementFilter_WORKSPACE_NAME)_TestFilter    INPUT  FEATURE_TYPE "$(ListElementFilter_WORKSPACE_NAME)_TclCaller_OUTPUT"    OUTPUT FEATURE_TYPE $(ListElementFilter_WORKSPACE_NAME)_TestFilter_TESTFILTERINPUTLINE_0
FACTORY_DEF * TestFactory FACTORY_NAME $(ListElementFilter_WORKSPACE_NAME)_TestFilter_Condition_1 INPUT FEATURE_TYPE $(ListElementFilter_WORKSPACE_NAME)_TestFilter_TESTFILTERINPUTLINE_0 TEST @EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>__listelementfilter.result<closeparen>,$(ListElementFilter_WORKSPACE_NAME)_TestFilter) = filtered ENCODED BOOLEAN_OPERATOR OR COMPOSITE_TEST_EXPR <Unused> OUTPUT PASSED FEATURE_TYPE $(ListElementFilter_WORKSPACE_NAME)_TestFilter_filtered OUTPUT FAILED FEATURE_TYPE $(ListElementFilter_WORKSPACE_NAME)_TestFilter_TESTFILTERINPUTLINE_1
FACTORY_DEF * TestFactory FACTORY_NAME $(ListElementFilter_WORKSPACE_NAME)_TestFilter_Condition_2 INPUT FEATURE_TYPE $(ListElementFilter_WORKSPACE_NAME)_TestFilter_TESTFILTERINPUTLINE_1 TEST @EvaluateExpression(FDIV,STRING_ENCODED,<at>Value<openparen>__listelementfilter.result<closeparen>,$(ListElementFilter_WORKSPACE_NAME)_TestFilter) = not_found ENCODED BOOLEAN_OPERATOR OR COMPOSITE_TEST_EXPR <Unused> OUTPUT PASSED FEATURE_TYPE $(ListElementFilter_WORKSPACE_NAME)_TestFilter_not_found OUTPUT FAILED FEATURE_TYPE $(ListElementFilter_WORKSPACE_NAME)_TestFilter_TESTFILTERINPUTLINE_2
FACTORY_DEF * TeeFactory FACTORY_NAME $(ListElementFilter_WORKSPACE_NAME)_TestFilter_<lt>UNFILTERED<gt> INPUT FEATURE_TYPE $(ListElementFilter_WORKSPACE_NAME)_TestFilter_TESTFILTERINPUTLINE_2 OUTPUT FEATURE_TYPE $(ListElementFilter_WORKSPACE_NAME)_TestFilter_<lt>UNFILTERED<gt>
# -------------------------------------------------------------------------
FACTORY_DEF * TeeFactory    FACTORY_NAME $(ListElementFilter_WORKSPACE_NAME)_AttributeRenamer    INPUT  FEATURE_TYPE "$(ListElementFilter_WORKSPACE_NAME)_TestFilter_<lt>UNFILTERED<gt>"    OUTPUT FEATURE_TYPE "$(ListElementFilter_WORKSPACE_NAME)_AttributeRenamer_OUTPUT"         @RenameAttributes(ATTR_LIST_DEF_VAL_ENCODED, __listelementfilter.result,_rejected_reason,)
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(ListElementFilter_WORKSPACE_NAME)_Filtered1669220493 Output Collector"   INPUT FEATURE_TYPE "$(ListElementFilter_WORKSPACE_NAME)_TestFilter_filtered"   OUTPUT FEATURE_TYPE "$(ListElementFilter_WORKSPACE_NAME)_Filtered" @RemoveAttributes(__listelementfilter.list_attr,__listelementfilter.filter_type,__listelementfilter.case,__listelementfilter.exp,__listelementfilter.negate,__listelementfilter.result)
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(ListElementFilter_WORKSPACE_NAME)_<Rejected>1669220493 Output Collector"   INPUT FEATURE_TYPE "$(ListElementFilter_WORKSPACE_NAME)_AttributeRenamer_OUTPUT"   OUTPUT FEATURE_TYPE "$(ListElementFilter_WORKSPACE_NAME)_<Rejected>" @RemoveAttributes(__listelementfilter.list_attr,__listelementfilter.filter_type,__listelementfilter.case,__listelementfilter.exp,__listelementfilter.negate)
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(ListElementFilter_WORKSPACE_NAME)_NotFound1669220493 Output Collector"   INPUT FEATURE_TYPE "$(ListElementFilter_WORKSPACE_NAME)_TestFilter_not_found"   OUTPUT FEATURE_TYPE "$(ListElementFilter_WORKSPACE_NAME)_NotFound" @RemoveAttributes(__listelementfilter.list_attr,__listelementfilter.filter_type,__listelementfilter.case,__listelementfilter.exp,__listelementfilter.negate,__listelementfilter.result)
INCLUDE [puts {MACRO WB_CURRENT_CONTEXT $(WB_OLD_CONTEXT_$(ListElementFilter_WORKSPACE_NAME))}]
